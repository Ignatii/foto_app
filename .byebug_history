continue
expect(flash[:warning]).to be_present
continue
result.valid?
result
continue
params
continue
params
continue
current_user
params.require(:comment).permit(:body,:image_id, :comment_id).to_unsafe_h
params
continue
params
continue
image.id
continue
params
continue
params.require(:comment).permit(:body,:image_id, :comment_id).to_unsafe_h
params
continue
params
continue
image.id
image
continue
result.valid?
result
params
continue
result.result
result.valid?
continue
User.first
Image.first
Image.first.id
continue
result
continue
result
continue
c.errors
c.valid?
c = image.likes.create(user_id: user[:id])
continue
result.errors.full_messages.to_sentence
result.errors[:base]
result.errors
result.result
result
continue
outcome_true.result
outcome_true
outcome_true.valid?
continue
result.errors
result.valid?
result
continue
result.errors.full_messages.to_sentence
continue
result.result.valid?
result.valid?
result.errors
result
continue
result.result.errors.full_messages.to_sentence
result.result.errors
result.errors
result.result.valid?
result.valid?
result
continue
result.errors.
result.errors.details
result.errors.detailes
result.errors
result.valid?
result.result.valid?
result.result
result
continue
result.valid?
result.result
result
continue
result.result.errors
result.result.to_s
result.result
continue
result.result.to_s
continue
result.valid?
result
result.result
result.result.valid?
continue
like
continue
Like.delete(like)
like.destroy
like.delete
like
continue
Like.delete(Like.where(user_id: user.id,image_id: image.id)).errors
res.errors
res
res = Like.delete(Like.where(user_id: user.id,image_id: image.id))
Like.delete(Like.where(user_id: user.id,image_id: image.id))
Like.where(user_id: user.id,image_id: image.id)
continue
result.result.errors
result.result.valid?
result.result.valid
result
continue
result.result.valid?
result.result.valid
result.result
continue
result.result.valid?
continue
result.result.valid?
result.result
continue
result.result.valid?
continue
result.result.valid?
result.result.valid
result
continue
outcome_true.result.class
outcome_true.result
outcome_true.result.class
continue
IMAGE_VOTES_COUNT.leaders(1)
continue
IMAGE_VOTES_COUNT.leaders(1)
IMAGE_VOTES_COUNT.leaders
IMAGE_VOTES_COUNT.members
IMAGE_VOTES_COUNT
continue
result.result.errors.full_messages.to_sentence
result.result.errors.full_messages
result.result.errors.full_messages.to_sentence
result.errors.full_messages.to_sentence
outcome.errors.full_messages.to_sentence
result.result.errors
result.result.error
continue
image.likes.create(user_id: user[:id]).errors.details[:user_id]
image.likes.create(user_id: user[:id]).errors.details[:user_id][:error]
image.likes.create(user_id: user[:id]).errors.details[:user_id]
image.likes.create(user_id: user[:id]).errors.details[:user_id}
image.likes.create(user_id: user[:id]).errors.details.user_id
image.likes.create(user_id: user[:id]).errors.details.error
image.likes.create(user_id: user[:id]).errors.details
image.likes.create(user_id: user[:id])
image.errors.details
continue
image.likes.create(user_id: user[:id]).errors.details
image.likes.create(user_id: user[:id]).errors
image.likes.create(user_id: user[:id])
Like.errors
errors
continue
result.result.errors.details
result.result.errors.messages
result.result.errors
result.result.valid.errors
result.result.valid?
result
result.result.errors
result.result.valid?
result.valid?
result.result.errors
result
continue
result.result.valid?
result.result
result
continue
current_user
Comment.find_by(id: params['id_comment'])
params
continue
User.all
continue
User.all
continue
Comment.all
comment
Comment.all
continue
Comment.all
current_user
continue
result
continue
result
continue
Image.all
params
continue
!@image.likes.where(user_id: current_user.id)
@image.likes.where(user_id: current_user.id)
params
continue
params
@image.likes.where(user_id: current_user.id)
continue
result
continue
result
response
continue
response
continue
result
continue
result['image']
result
continue
result['error']
result[:error]
result
continue
response.body
response
continue
response.body
continue
result.result
params
continue
params
continue
current_user.images.build(image: image_param[:image])
current_user.images.build(image_param[:image])
current_user
image_param[:image]
@images
@image
continue
response.body
response
continue
result.to_be_present
result
continue
response.body.to_h
response.body
responce.body
continue
