continue
result.result
result
continue
ListImages.run!.reorder(likes_img: :ASC)
ListImages.run!.reorder(likes_img: :DESC)
ListImages.run!.reorder(likes_img: DESC)
ListImages.run!
images.reorder(likes_img: :DESC) if params[:sort_upvote] && !params[:sort_data]
continue
ListImages.run!
images
images.reorder(likes_img: :DESC) if params[:sort_upvote] && !params[:sort_data]
!params[:sort_upvote]
params[:sort_upvote]
params
continue
params
continue
params.permit(:condition_search, :sort_data).to_unsafe_h
params.permit(:condition_search, :sort_data)
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
Comment.find_by(id: params[:comment_id]) unless params[:comment_id].zero?
Image.find_by(id: params[:image_id]) if params[:image_id] && params[:comment_id].zero?
continue
params.require(:comment).permit(:body,:image_id, :comment_id).to_unsafe_h
continue
params.require(:comment).permit(:body,:image_id, :comment_id).to_unsafe_h
params: params.require(:comment).permit(:body,:image_id, :comment_id).to_unsafe_h
continue
params
continue
params[:comment_id]
params
continue
params.require(:comment).permit(:body,:image_id).to_unsafe_h
params.require(:comment).permit(:body,:image_id)
params.permit(:body,:image_id)
params
continue
params
continue
params
continue
params[:comment][:body].empty?
continue
IMAGE_VOTES_COUNT.delete_leaderboard
continue
IMAGE_VOTES_COUNT.delete_leaderboard
continue
IMAGE_VOTES_COUNT.leaders(IMAGE_VOTES_COUNT.total_pages)
continue
@ids
continue
IMAGE_VOTES_COUNT.delete_leaderboard
delete_leaderboard
continue
@ids
ids
continue
@ids
ids
continue
@ids
@images
continue
result.result
result
continue
result
continue
params[:text, :insta_tags]
params.require(:image).permit(:insta_tags,:text,:url_image,:user_id)
params.permit(:insta_tags,:text,:url_image,:user_id)
params[:insta_tags]
params
continue
params
continue
params.to_unsafe_h
params
continue
params.permit(
params[:insta_tags]
params
continue
result.result
result
continue
params.require(:image).permit(:image, :title_img, :tags, :user_id).to_unsafe_h
params: params.require(:image).permit(:image, :title_img, :tags, :user_id).to_unsafe_h
continue
result
params.require(:image).permit(:image, :title_img, :tags, :user_id).to_unsafe_h
params: params.require(:image).permit(:image, :title_img, :tags, :user_id).to_unsafe_h
params
continue
params
params: params.require(:image).permit(:image, :title_img, :tags, :user_id).to_unsafe_h
continue
{parasms: params.require(:image).fetch(@user.id).permit(:image, :title_img, :tags, :user_id).to_unsafe_h, user_id: params[:user_id]}
{parasms: params.require(:image).fetch(@user).permit(:image, :title_img, :tags, :user_id).to_unsafe_h, user_id: params[:user_id]}
{parasms: params.require(:image).fetch(current_user).permit(:image, :title_img, :tags, :user_id).to_unsafe_h, user_id: params[:user_id]}
{parasms: params.require(:image).fetch(user_id).permit(:image, :title_img, :tags, :user_id).to_unsafe_h, user_id: params[:user_id]}
{parasms: params.require(:image).fetch(params[:user_id]).permit(:image, :title_img, :tags, :user_id).to_unsafe_h, user_id: params[:user_id]}
{parasms: params.require(:image).fetch(:user_id).permit(:image, :title_img, :tags, :user_id).to_unsafe_h, user_id: params[:user_id]}
{parasms: params.require(:image, :user_id).permit(:image, :title_img, :tags, :user_id).to_unsafe_h, user_id: params[:user_id]}
{params: params.require(:image, :user_id).permit(:image, :title_img, :tags, :user_id).to_unsafe_h, user_id: params[:user_id]}
{params: params.require(:image, :user_id).permit(:image, :title_img, :tags, :user_id).to_unsafe_h, user_id: params[:user_id]
{params.require(:image, :user_id).permit(:image, :title_img, :tags, :user_id).to_unsafe_h, user_id: params[:user_id]
params.require(:image).permit(:image, :title_img, :tags, :user_id).to_unsafe_h
params.require(params).permit(:image, :title_img, :tags, :user_id).to_unsafe_h
params.require(:params).permit(:image, :title_img, :tags, :user_id).to_unsafe_h
params.require().permit(:image, :title_img, :tags, :user_id).to_unsafe_h
params.require(:image).permit(:image, :title_img, :tags, :user_id).to_unsafe_h
params.permit(:image, :title_img, :tags, :user_id).to_h
params.require(:image).permit(:image, :title_img, :tags, :user_id).to_h
params.require(:image).permit(:image, :title_img, :tags, :user_id).to_unsafe_h
params
params.require(:image).permit(:image, :title_img, :tags, :user_id).to_unsafe_h
params.require(:image, :user_id).permit(:image, :title_img, :tags, :user_id).to_unsafe_h
params.require(:image).permit(:image, :title_img, :tags, :user_id).to_unsafe_h
params.require(:image).permit(:image, :title_img, :image, :user_id).to_unsafe_h
params.require(:image).permit(:image,:title_img,:image,:tags).to_unsafe_h
params.require(:image).permit(:image,:title_img,:image).to_unsafe_h
params.require(:image).permit(:title_img).to_unsafe_h
params.require(:image).permit(:title_img)
params.to_unsafe_h
params.to_h
params
params[:img]
@image
continue
result.result
result
continue
params
continue
params.to_h
params
result = CreateImages.run(params: params)
continue
params_img
params
params_img[:img]
params[:img]
params_img
continue
auth_hash[:info][:email]
continue
auth_hash[:uid]
auth_hash[:provider]
identity
current_user_session
signed_in?
user
continue
result.result
result
continue
result
continue
session
sesion
result
continue
session.class
continue
session.class
session[:user_id]
session
continue
@session
request.env
request.session
session
sesion
request
continue
request
request.session
continue
auth_hash[:provider]
auth_hash[:provide]
auth_hash.provider
auth_hash
continue
result
continue
auth_hash
result
continue
result
continue
! result.result
if result.result
result.result
result
continue
result
continue
hash_user[:user]
hash_user
continue
result
continue
result.result
result
continue
@images
continue
result.result
result
continue
params_img
continue
hash_params
result
continue
params
continue
hash_params
continue
params["url_image"]["url"]
params[:text]
params["text"]
params["insta_tags"]
params["tags"]
params
result
result.result
continue
params
continue
result
continue
result.result
result
continue
params_img[:img]
params_img
continue
inputs
