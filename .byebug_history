continue
url_for(@image)
@path
continue
request.env["omniauth.auth"]
continue
params["url_image"]["url"]
params["url_image"]
params
continue
params
continue
@insta_images.first["images"]["thumbnail"]["url"]
@insta_images.first["images"]["thumbnail"]
@insta_images.first["images"]
@insta_images.first["caption"]["text"]
@insta_images.first["caption"]
@insta_images.first
continue
@insta_images.empty?
@insta_images.emoty?
@insta_images
continue
response_parsed["data"][0]["images"]
response_parsed["data"][0]
response_parsed["data"]
response_parsed["data"]["images"]
response_parsed["data"].first
response_parsed["data"]
response_parsed
response_parsed[:data]
continue
response
response_parsed
continue
response
continue
params
continue
params['token_insta'].split('en=')[1]
params['token_insta'].split('en=')
continue
!params['token_insta'].empty?
continue
params['token_insta']
params['token_insta'].empty?
continue
params["token_insta"]
params
continue
current_user.path
current_user.url
current_user_url
current_user
current_user_path
continue
params[:token_insta].split('en=')[1]
params[:token_insta].split('en=')
@token
params
@token
continue
params
@token
@user
continue
current_user
current_user.insta_token.empty?
continue
current_user.insta_token.empty?
current_user.insta_token
current_user.insta_token.empty?
current_user
continue
params[:token_insta].empty?
params[:token_insta].nil?
continue
params[:token_insta]
params[:token_insta].empty?
params[:token_insta].nil?
continue
params["token_insta"]
params
@token
continue
params
continue
params
continue
current_page?
current_page
request.path
request.host
request.url
request.fullpath
request.original_url
request_uri
request.request_uri
continue
request[:instagram]
request[:instagramm]
request[:access_token]
request[:access_tokne]
params
continue
request[:access_token]
request.headers
response.access_token
response.headers
response
respone
https://api.instagram.com/oauth/authorize/?client_id=a999fd0ee4be498f8fdda69d2ee015fb&redirect_uri=http://loc
session
params
continue
params
continue
request[:token]
session[:token]
request.POST
request.GET
request.params
request
params.GET
params
continue
request.POST
request.GET
request.path_parameters
request[:get]
request
params
continue
Image.find(params[:id]).rejected?
Image.find(params[:id])
continue
params
continue
current_user
currnet_user
continue
params
continue
comment.keys
comment.keys?
continue
comment
continue
comment
continue
comment
continue
comment
continue
comment
continue
comment
continue
User.find_by(id: comment.user_id)
comment
coment
continue
comment
continue
params
continue
params
continue
params[:image_id]
params
continue
